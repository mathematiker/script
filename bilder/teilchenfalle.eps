%!PS-Adobe-2.0 EPSF-2.0
%%Title: teilchenfalle.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Sat Aug  8 12:35:36 2009
%%For: skunk@deskskunk (Michael Kopp,,,)
%%BoundingBox: 0 0 201 215
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% bricks
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 16 true [ 16 0 0 -16 0 16 ]
	{<008000800080008000800080
	 0080ffff8000800080008000
	 800080008000ffff>}
        imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P7 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 215 moveto 0 0 lineto 201 0 lineto 201 215 lineto closepath clip newpath
-172.2 454.3 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 38
% Arc
7.500 slw
0 slc
gs  clippath
4442 6610 m 4439 6763 l 4559 6766 l 4562 6613 l 4562 6613 l 4500 6732 l 4442 6610 l cp
eoclip
n 7648.2 6748.6 3148.2 179.9736 -123.6881 arc
gs col4 s gr
 gr

% arrowhead
0 slj
15.000 slw
n 4442 6610 m 4500 6732 l 4562 6613 l  col4 s
% Arc
7.500 slw
gs  clippath
5123 6608 m 5114 6761 l 5234 6768 l 5242 6615 l 5242 6615 l 5176 6732 l 5123 6608 l cp
eoclip
n 6294.0 6746.2 1119.0 179.8043 -120.8017 arc
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 5123 6608 m 5176 6732 l 5242 6615 l  col4 s
% Arc
7.500 slw
gs  clippath
4895 6609 m 4889 6762 l 5009 6767 l 5015 6614 l 5015 6614 l 4951 6732 l 4895 6609 l cp
eoclip
n 6748.3 6748.3 1798.3 179.9465 -119.7487 arc
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 4895 6609 m 4951 6732 l 5015 6614 l  col4 s
% Arc
7.500 slw
gs  clippath
4669 6610 m 4664 6763 l 4784 6766 l 4789 6613 l 4789 6613 l 4726 6732 l 4669 6610 l cp
eoclip
n 7198.0 6748.2 2473.0 179.9579 -123.6687 arc
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 4669 6610 m 4726 6732 l 4789 6613 l  col4 s
% Arc
7.500 slw
gs  clippath
4079 6656 m 4082 6809 l 4202 6806 l 4199 6653 l 4199 6653 l 4142 6775 l 4079 6656 l cp
eoclip
n 997.9 6786.0 3144.1 0.1272 -56.3084 arcn
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 4079 6656 m 4142 6775 l 4199 6653 l  col4 s
% Arc
7.500 slw
gs  clippath
3401 6657 m 3409 6810 l 3529 6803 l 3520 6650 l 3520 6650 l 3468 6774 l 3401 6657 l cp
eoclip
n 2353.5 6787.3 1115.5 0.2390 -59.4214 arcn
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 3401 6657 m 3468 6774 l 3520 6650 l  col4 s
% Arc
7.500 slw
gs  clippath
3627 6656 m 3633 6809 l 3753 6804 l 3747 6651 l 3747 6651 l 3692 6774 l 3627 6656 l cp
eoclip
n 1894.7 6790.3 1798.3 0.0535 -60.2513 arcn
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 3627 6656 m 3692 6774 l 3747 6651 l  col4 s
% Arc
7.500 slw
gs  clippath
3855 6655 m 3860 6808 l 3980 6805 l 3975 6652 l 3975 6652 l 3919 6774 l 3855 6655 l cp
eoclip
n 1432.0 6799.5 2488.0 -0.1738 -56.2019 arcn
gs col4 s gr
 gr

% arrowhead
15.000 slw
n 3855 6655 m 3919 6774 l 3975 6652 l  col4 s
% Polyline
7.500 slw
n 3150 6750 m 5400 6750 l 5400 7200 l 3150 7200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 210.00 450.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [15 45] 45 sd
n 4275 3825 m
 4275 6750 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
n 3210 3870 m 3210 3915 l 3225 3945 l 3225 3975 l 3240 4005 l 3240 4035 l
 3255 4065 l 3270 4095 l 3270 4125 l 3300 4185 l 3300 4230 l
 3315 4260 l 3330 4290 l 3345 4320 l 3360 4350 l 3375 4380 l
 3390 4410 l 3405 4455 l 3420 4485 l 3435 4515 l 3465 4560 l
 3495 4590 l 3525 4635 l 3555 4665 l 3600 4695 l 3645 4740 l
 3690 4755 l 3735 4785 l 3765 4800 l 3810 4830 l 3855 4845 l
 3915 4875 l 3945 4890 l 3990 4905 l 4020 4920 l 4050 4935 l
 4095 4950 l 4125 4965 l 4155 4980 l 4185 4995 l 4230 5010 l
 4260 5010 l 4305 5025 l 4335 5040 l 4365 5040 l 4395 5055 l
 4455 5055 l 4485 5070 l 4530 5070 l 4560 5070 l 4590 5085 l
 4635 5085 l 4680 5085 l 4710 5085 l 4740 5085 l 4770 5085 l
 4800 5085 l 4830 5070 l 4860 5055 l 4890 5040 l 4920 5040 l
 4980 4995 l 5010 4965 l 5055 4935 l 5085 4905 l 5100 4875 l
 5115 4845 l 5130 4815 l 5145 4785 l 5145 4755 l 5160 4725 l
 5160 4680 l 5160 4620 l 5160 4575 l 5160 4545 l 5160 4515 l
 5160 4485 l 5160 4440 l 5160 4395 l 5160 4350 l 5145 4320 l
 5115 4290 l 5085 4260 l 5055 4230 l 5025 4200 l 4995 4185 l
 4965 4170 l 4935 4155 l 4905 4140 l 4875 4125 l 4830 4125 l
 4800 4110 l 4770 4095 l 4740 4080 l 4710 4065 l 4680 4035 l
 4635 4035 l 4605 4035 l 4575 4035 l 4545 4035 l 4515 4035 l
 4485 4035 l 4455 4035 l 4425 4035 l 4395 4035 l 4350 4035 l
 4305 4035 l 4260 4050 l 4230 4065 l 4200 4065 l 4155 4080 l
 4125 4095 l 4095 4095 l 4065 4125 l 4035 4140 l 4005 4170 l
 3975 4200 l 3945 4230 l 3930 4260 l 3915 4290 l 3900 4335 l
 3885 4365 l 3870 4410 l 3855 4440 l 3855 4485 l 3840 4560 l
 3825 4605 l 3825 4650 l 3825 4710 l 3810 4740 l 3810 4785 l
 3810 4815 l 3810 4845 l 3810 4875 l 3810 4920 l 3810 4965 l
 3825 4995 l 3855 5025 l 3885 5070 l 3915 5100 l 3930 5130 l
 3945 5160 l 3975 5190 l 4005 5220 l 4035 5265 l 4065 5295 l
 4080 5325 l 4095 5355 l 4140 5400 l 4170 5430 l 4200 5445 l
 4230 5460 l 4260 5460 l 4290 5475 l 4320 5490 l 4350 5490 l
 4380 5490 l 4425 5490 l 4455 5490 l 4500 5490 l 4545 5475 l
 4590 5445 l 4620 5430 l 4650 5415 l 4695 5385 l 4725 5370 l
 4755 5355 l 4785 5325 l 4800 5295 l 4815 5265 l 4830 5235 l
 4830 5205 l 4830 5175 l 4830 5145 l 4830 5115 l 4830 5070 l
 4830 5040 l 4830 5010 l 4830 4980 l 4830 4950 l 4800 4905 l
 4770 4875 l 4740 4845 l 4710 4815 l 4680 4800 l 4650 4800 l
 4620 4785 l 4590 4770 l 4560 4770 l 4530 4770 l 4500 4770 l
 4470 4770 l 4440 4770 l 4410 4770 l 4380 4770 l 4335 4785 l
 4290 4800 l 4245 4830 l 4200 4845 l 4170 4860 l 4140 4875 l
 4110 4905 l 4095 4935 l 4080 4965 l 4065 5010 l 4065 5040 l
 4050 5100 l 4035 5145 l 4020 5190 l 4020 5220 l 4020 5250 l
 4020 5280 l 4005 5310 l 4005 5355 l 4005 5400 l 3990 5430 l
 3990 5460 l 3990 5490 l 3990 5520 l 3990 5565 l 3990 5595 l
 3990 5625 l 4005 5670 l 4035 5700 l 4065 5730 l 4095 5730 l
 4125 5745 l 4155 5775 l 4200 5790 l 4230 5805 l 4275 5820 l
 4305 5835 l 4350 5835 l 4380 5835 l 4410 5835 l 4440 5835 l
 4470 5805 l 4485 5775 l 4485 5745 l 4485 5715 l 4485 5685 l
 4485 5655 l 4485 5625 l 4470 5595 l 4425 5565 l 4395 5565 l
 4365 5565 l 4335 5565 l 4305 5565 l 4275 5565 l 4245 5565 l
 4215 5580 l 4185 5610 l 4155 5640 l 4140 5685 l 4140 5715 l
 4140 5760 l 4140 5790 l 4140 5820 l 4140 5850 l 4140 5880 l
 4140 5910 l 4140 5940 l 4140 5970 l 4140 6000 l 4155 6030 l
 4185 6075 l 4215 6105 l 4245 6135 l 4275 6150 l 4305 6165 l
 4335 6165 l 4365 6165 l 4395 6150 l 4425 6120 l 4440 6090 l
 4470 6060 l 4485 6030 l 4485 6000 l 4485 5970 l 4485 5940 l
 4455 5910 l 4425 5895 l 4395 5895 l 4365 5895 l 4335 5895 l
 4305 5895 l 4275 5910 l 4245 5940 l 4215 5970 l 4215 6000 l
 4200 6030 l 4200 6060 l 4200 6090 l 4185 6120 l 4185 6150 l
 4185 6180 l 4185 6210 l 4215 6240 l 4245 6270 l 4275 6300 l
 4305 6315 l 4335 6330 l 4365 6330 l 4395 6300 l 4395 6270 l
 4380 6240 l 4350 6225 l 4320 6225 l 4290 6225 l 4260 6225 l
 4230 6255 l 4215 6285 l 4200 6315 l 4200 6345 l 4215 6375 l
 4245 6405 l 4275 6435 l 4305 6435 l
 4335 6435 l gs col2 s gr 
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
